# Google Apps Script for Calendar Event Management from Google Sheets

This script automates the creation and updating of Google Calendar events based on data in a specified Google Sheet. It also prevents the creation of duplicate events.

## Overview

The script reads data from the 'ðŸ’¡CS funnel tracking' sheet in your Google Sheets. For each row marked with "positive answer" in Column I, it extracts event details (title, date/time, description, location) and either creates a new event in your Google Calendar or updates an existing one.

To manage updates, the script uses an "Event ID" column in your sheet to track which row corresponds to which calendar event.

## Key Features

* **Event Creation:** Automatically creates Google Calendar events for rows with "positive answer".
* **Event Updating:** Modifies existing calendar events if the corresponding data in the sheet is changed (identified by "Event ID").
* **Duplicate Prevention:** Checks for existing events with the same title and time before creating new ones (if no "Event ID" is present).
* **Date/Time Flexibility:** Supports various date and time formats in Column J (e.g., DD.MM.YYYY HH:MM, DD/MM HH:MM, DD.MM, HH:MM).
* **Location Support:** Adds the location of the event from Column K to the Google Calendar event.
* **Logging:** Provides informative messages in the Execution Log about event creation, updates, and duplicate detections.

## Setup

1.  **Open your Google Sheet:** Navigate to the Google Sheet containing your data.
2.  **Open the Script Editor:** Go to "Extensions" > "Apps Script".
3.  **Copy and Paste the Code:** Replace any existing code in the Script Editor with the provided script.
4.  **Replace Calendar ID:** In the script, find the line `const CALENDAR_ID = "YOUR_CALENDAR_ID";` and replace `"YOUR_CALENDAR_ID"` with the actual ID of the Google Calendar where you want the events to be created. You can find your Calendar ID in your calendar settings.
5.  **Save the Script:** Click the save icon (floppy disk) and give your script a name (e.g., `CalendarSync`).
6.  **Set up a Time-Driven Trigger (Optional for Automation):**
    * Click the clock icon on the left sidebar (Triggers).
    * Click "Add Trigger".
    * Choose the function to run: `checkStatusAndCreateEvents`.
    * Choose the event source: "Time-driven".
    * Select your desired time interval (e.g., "Hour timer" to run every hour).
    * Configure any other necessary settings and click "Save". You may need to authorize the script to access your Google Sheet and Calendar.

## Column Configuration

The script assumes the following column layout in your 'ðŸ’¡CS funnel tracking' sheet:

| Column | Letter | Description                                     |
| :----- | :----- | :---------------------------------------------- |
| 1      | A      | Professor                                     |
| 2      | B      | Department                                    |
| 3      | C      | Course                                        |
| 4      | D      | Year                                          |
| 6      | F      | (Assumed Year - based on your data)           |
| 8      | H      | Event Title (will be appended with " CS")     |
| 9      | I      | Status (script triggers on "positive answer") |
| 10     | J      | Date and/or Time of the event                 |
| 11     | K      | Location of the event                         |
| ...    | ...    | ...                                             |
| (Last + 1) | (Dynamic) | **Event ID** (script will create this column) |

**Important:** The script will automatically create an "Event ID" column (if it doesn't exist) to track the link between spreadsheet rows and calendar events.

## Usage

Once the script is set up (and a trigger is configured if you want automation), it will run according to the trigger schedule or when you manually run the `checkStatusAndCreateEvents` function from the Script Editor.

* New rows with "positive answer" will have corresponding calendar events created.
* Changes to existing rows (with an "Event ID") will update the linked calendar event.
* The script will log its actions in the Execution Log (View > Logs in the Script Editor).

This documentation provides a basic understanding of the script and how to set it up. For more advanced configurations or troubleshooting, refer to the script code and the Google Apps Script documentation.